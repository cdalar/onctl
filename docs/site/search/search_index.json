{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p><code>onctl</code> command lets you interact with Multiple Cloud Providers using the same commands.</p>"},{"location":"#quick-start","title":"Quick Start","text":"<p>You can simply use Homebrew to install onctl client. </p> <ul> <li><code>brew install cdalar/tap/onctl</code> - to install onctl client. </li> <li><code>onctl up</code> - run this on your project repo. </li> <li><code>onctl ls</code> - list of running vms.</li> </ul>"},{"location":"deployments/","title":"Deployments","text":"<p>The main component to deploy your app with ease. </p> <pre><code>Usage:\n  onctl deploy [flags]\n\nFlags:\n      --cnames strings   CNAMES link to this app\n  -c, --cpu string       CPU (m) limit of the app. (default \"250\")\n      --env string       Name of environment variable group\n  -h, --help             help for deploy\n  -i, --image string     ImageName and Tag ex. nginx:latest\n  -m, --memory string    Memory (Mi) limit of the app. (default \"250\")\n      --name string      Name of the app.\n  -p, --port int32       Port of the app. (default 80)\n      --public           makes deployment public and accessible from a onkube.app subdomain\n  -v, --volume string    Volume &lt;name&gt;:&lt;mount_path&gt; to mount.\n</code></pre> <p>Public Deployments</p> <p>Deployment are by default not exposed to internet. In order to get a public URL You should use --public option</p>"},{"location":"deployments/#image","title":"Image","text":"<p>The url of the image to deploy. ex. <code>alpine:latest</code> / <code>nginx:alpine</code> etc.</p> <p>To Deploy an image from a private repository</p> <p>You should add your access credentials first</p> <ul> <li><code>onctl reg add &lt;image_url&gt; -u &lt;user&gt; -p &lt;password&gt;</code> - Add your container registry credentials </li> </ul>"},{"location":"deployments/#environment-variables","title":"Environment Variables","text":"<ol> <li>Define your Environment Variables. Check docs here</li> <li>Pass environment variable group name to deploy command          <pre><code>onctl deploy -i nginx:alpine --env &lt;name&gt;\n</code></pre></li> </ol>"},{"location":"downloads/","title":"Downloads","text":"<p>Check Releases page and download acording to your OS. </p>"},{"location":"envvars/","title":"Environment Variables","text":"<p>Environment variables to use for your application</p> <pre><code>``` \nUsage:\n  onctl envs [command]\n\nAliases:\n  envs, env, environments, environment\n\nAvailable Commands:\n  add         Add Environment Variable Group\n  delete      Delete Environment Variable Group\n  describe    Describe Environment Variable Group\n  list        List environments variables\n\nFlags:\n  -h, --help   help for envs\n\n```\n</code></pre>"},{"location":"envvars/#env-file","title":".env file","text":"<p>env command requests an .env file </p> <ol> <li> <p>Create a simple .env like the one below.</p> <pre><code>DEMO_GREETING=\"Hello from the environment\" DEMO_FAREWELL=\"Such a sweet sorrow\"\n</code></pre> </li> <li> <p>Pass it as a paramater to onctl. </p> <p><pre><code>\u276f onctl envs add --env-file .env --name test\n</code></pre> <pre><code>env-test-env  created.\n</code></pre></p> <p>Prefix</p> <p>Environment Variable Group names are always prefixes with env-. ex. given name test become env-test </p> </li> <li> <p>List and check envs</p> <p><pre><code>\u276f onctl env ls\n</code></pre> <pre><code>NAME           VALUES   AGE\nenv-test       2        9s\nenv-website    5        2d3h\n</code></pre></p> </li> <li> <p>List the contents on Environment Variable Group by describe .      <pre><code>\u276f onctl env describe env-test\n</code></pre> <pre><code>KEY             VALUE\nDEMO_FAREWELL   Such a sweet sorrow\nDEMO_GREETING   Hello from the environment\n</code></pre></p> </li> </ol>"}]}